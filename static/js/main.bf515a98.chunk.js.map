{"version":3,"sources":["Components/ResponseForm.module.css","Components/Layout/Hamburger.module.scss","App.module.scss","Components/Card.module.scss","Components/ThankYouPage.module.scss","Components/AddUser.module.scss","Components/Admin.module.scss","Components/Card.js","Components/Highscore.js","img/advent1.png","img/advent2.png","img/3desember.jpeg","img/4desember.jpeg","Components/ResponseForm.js","Components/ResponsePage.js","Components/ThankYouPage.js","Components/AdminDoor.js","Components/PreviousDoorsPage.js","Components/AddUserForm.js","Components/AddUserPage.js","Components/AddDoorForm.js","Components/AddDoor.js","Components/Layout/Hamburger.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Highscore","useState","userData","setUserData","useEffect","fetch","config","FIREBASE_URL","then","response","json","data","sortedUserList","username","push","sort","a","b","map","index","ResponseForm","nameRef","useRef","pwdRef","messageRef","questionRef","pwd","setPwd","setUsername","question","setQuestion","today","Date","door","getDate","toString","isAdvent","setDate","Question","id","ref","alt","src","img1","width","img2","img3","img4","doorNo","keys","Object","randomId","Math","floor","random","length","questionData","method","body","JSON","stringify","admin","headers","catch","err","user","parse","localStorage","getItem","form","onSubmit","event","preventDefault","submittedForm","current","value","trim","password","answer","submittedAt","console","log","onSubmittedDoor","control","rows","placeholder","type","required","onChange","val","actions","lenke","to","ResponsePage","navigate","useNavigate","dbName","Error","setItem","submitDoorHandler","alert","message","ThankYouPage","AdminDoor","loggedIn","setLoggedIn","rerenderHack","setRerenderHack","doorParam","useParams","setDoor","userAnswers","setUserAnswers","setAdmin","score","setScore","newScore","setNewScore","submitHandler","givePoints","maybeGive","tmpScore","updateUsers","adminBody","oldScore","dateTime","NotLoggedIn","UserAnswer","ScoreBoardEntry","onClick","LoggedIn","usernames","userAnswer","userAnswersTmp","x","visible","setVisible","qna","setQna","StringOrImg","PreviousDoorsPage","idList","setIdList","filteredData","values","filter","pop","ids","parseInt","key","reverse","AddUserFrom","submittedUser","forEach","onAddedUser","document","getElementById","innerHTML","AdminPage","userWithPassword","addUserWithPassword","secretlink","AddDoorForm","qRef","aRef","userRef","submittedQnA","onAddedQnA","AddDoor","Hamburger","hamburger","hamburgerClass","setHamburgerClass","navmenu","navmenuClass","setNavmenuClass","open","setOpen","toggle","active","navbar","navbranding","navitem","bar","App","main","path","exact","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.bf515a98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ResponseForm_form__1VFJw\",\"control\":\"ResponseForm_control__jRjwf\",\"actions\":\"ResponseForm_actions__1-bhU\",\"lenke\":\"ResponseForm_lenke__2srQj\",\"question\":\"ResponseForm_question__1dZcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Hamburger_navbar__21JeB\",\"navbranding\":\"Hamburger_navbranding__2JFfS\",\"navmenu\":\"Hamburger_navmenu__2JUuE\",\"navlink\":\"Hamburger_navlink__1PrJC\",\"hamburger\":\"Hamburger_hamburger__36Un3\",\"bar\":\"Hamburger_bar__1W2Nz\",\"active\":\"Hamburger_active__2aKt6\",\"navitem\":\"Hamburger_navitem__2Zqz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3K4pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThankYouPage\":\"ThankYouPage_ThankYouPage__3PRoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secretlink\":\"AddUser_secretlink__3HNu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"Admin_admin__2rWz7\"};","import classes from \"./Card.module.scss\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport config from \"../config.json\";\n\nfunction Highscore() {\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          setUserData(data);\n        }\n      });\n  }, []);\n  var sortedUserList = [];\n  for (var username in userData) {\n    sortedUserList.push([username, userData[username]]);\n  }\n  sortedUserList.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  return (\n    <div>\n      <Card>\n        <h2>Highscore</h2>\n        {sortedUserList !== [] && (\n          <table>\n            <tbody>\n              {sortedUserList.map((username, index) => (\n\n                <tr key={username[0]}>\n                  <td>{username[0]}</td>\n                  <td>{username[1]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </Card>\n    </div>\n  );\n}\n\nexport default Highscore;\n","export default __webpack_public_path__ + \"static/media/advent1.4314d18d.png\";","export default __webpack_public_path__ + \"static/media/advent2.53ffb9fb.png\";","export default __webpack_public_path__ + \"static/media/3desember.84ebc20f.jpeg\";","export default __webpack_public_path__ + \"static/media/4desember.a4f126d3.jpeg\";","import classes from \"./ResponseForm.module.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../config.json\"\nimport img1 from \"../img/advent1.png\";\nimport img2 from \"../img/advent2.png\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\n\nimport Card from \"./Card\";\n\n\nfunction ResponseForm(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n  const messageRef = useRef();\n  const questionRef = useRef();\n  const [pwd, setPwd] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const [question, setQuestion] = useState(\"\");\n  const today = new Date();\n  const door = today.getDate().toString();\n  const isAdvent = today <= new Date().setDate(24);\n\n  useEffect(() => {\n    openDoor(door);\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user){\n      setPwd(user.pwd);\n      setUsername(user.user);\n    }\n  }, [door]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedForm = {\n      username: nameRef.current.value.toString().trim(),\n      password: pwdRef.current.value,\n      answer: messageRef.current.value,\n      question: question,\n      door: door,\n      submittedAt: new Date(),\n    };\n    console.log(submittedForm);\n    props.onSubmittedDoor(submittedForm);\n  }\n\n  function openDoor(doorNo) {\n    fetch(\n      `${config.FIREBASE_URL}openedDoors/${doorNo}/question.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data);\n          setQuestion(data[keys[0]].question);\n        } else {\n          fetch(\n            `${config.FIREBASE_URL}doorIds.json`\n          )\n            .then((response) => {\n              return response?.json();\n            })\n            .then((data) => {\n              if (data) {\n                var keys = Object.keys(data);\n                var randomId = keys[Math.floor(Math.random() * keys.length)];\n                fetch(\n                  `${config.FIREBASE_URL}doorsQ/${randomId}.json`\n                )\n                  .then((response) => {\n                    return response?.json();\n                  })\n                  .then((data) => {\n                    var keys = Object.keys(data);\n                    var questionData = data[keys[0]];\n                    setQuestion(questionData.question);\n                    fetch(\n                      `${config.FIREBASE_URL}openedDoors/${doorNo}/question.json`,\n                      {\n                        method: \"POST\",\n                        body: JSON.stringify({ question: questionData.question, id: randomId, admin: questionData.admin }),\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                      }\n                    );\n                  })\n                  .then(\n                    fetch(\n                      `${config.FIREBASE_URL}doorIds/${randomId}.json`,\n                      {\n                        method: \"DELETE\",\n                      }\n                    )\n                  )\n                  .catch((err) => {\n                    setQuestion(err);\n                  });\n              } else {setQuestion(\"Tomt for spørsmål :(\")}\n          });\n        }\n      }).catch((err) => setQuestion(\"Tomt for spørsmål :(\"));\n  }\n\n  function Question(props) {\n    if (question === \"Rebus1\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus2\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus3\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus4\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.question} id=\"question\" ref={questionRef}>\n          {question}\n        </div>\n      );\n    }\n  }\n\n  return ( <div>\n    {isAdvent && <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h2>Dagens spørsmål</h2>\n        <Question />\n        <h3>Luke {door}</h3>\n        <div className={classes.control}>\n          <textarea\n            id=\"message\"\n            rows=\"5\"\n            ref={messageRef}\n            placeholder={`Skriv svaret her`}\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n            value={username}\n            onChange={(val) => setUsername(val.value)}\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n            value={pwd}\n            onChange={(val) => setPwd(val.value)}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>}\n    {!isAdvent && \n    <div>\n    <div>\n      Advent er over. \n    </div>\n    <div>\n      <Link className={classes.lenke} to=\"/tidligere-spørsmål\" >Du kan se her fram til neste advent</Link>\n    </div>\n    </div>}\n    </div>\n  );\n}\n\nexport default ResponseForm;\n","import DoorWithResponse from \"../Components/ResponseForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\";\n\nfunction ResponsePage() {\n  const navigate = useNavigate();\n  function checkPasswordAndSubmit(answer) {\n    const dbName = `${answer.password}${answer.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          submitDoorHandler(answer);\n        } else {\n          throw new Error(\"Brukernavn eller passord er feil\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function submitDoorHandler(answer) {\n    const doorNo = answer.door;\n    var user = {user: answer.username, pwd: answer.password}\n    localStorage.setItem(\"user\", JSON.stringify(user))\n    fetch(\n      `${config.FIREBASE_URL}answers/${doorNo}/answer.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(answer),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => {\n      navigate(\"/takk\");\n    });\n  }\n  return (\n    <div>\n      <section>\n        <DoorWithResponse onSubmittedDoor={checkPasswordAndSubmit} />\n      </section>\n    </div>\n  );\n}\n\nexport default ResponsePage;\n","import classes from './ThankYouPage.module.scss';\n\nfunction ThankYouPage() {\n  return <div className={classes.ThankYouPage}>Lukesvar er notert! <br/>Håper det var riktig &#129310;</div>;\n}\n\nexport default ThankYouPage;\n","import { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport config from \"../config.json\";\nimport classes from './Admin.module.scss';\nimport Card from \"./Card\";\n\nfunction AdminDoor() {\n  const username = useRef();\n  const password = useRef();\n  const doorNo = useRef();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [rerenderHack, setRerenderHack] = useState(false);\n  let { doorParam } = useParams();\n  const [door, setDoor] = useState(doorParam);\n  const [qna, setQna] = useState({});\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [admin, setAdmin] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n\n  const [score, setScore] = useState({});\n  const [newScore, setNewScore] = useState({});\n\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        setScore(data);\n      });\n  }, []);\n  \n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        setNewScore(data);\n      });\n  }, []);\n\n\n  useEffect(() => {\n    fetch(`${config.FIREBASE_URL}openedDoors/${door}.json`)\n    .then((response) => {\n      return response?.json();\n    })\n    .then((data) => {\n      if (data){\n        var keys = Object.keys(data.question)\n        setAdmin(data.question[keys].admin);\n        setQuestion(data.question[keys].question);\n      }\n    });\n  }, [])\n\n  useEffect(() => {\n    if (true) {\n      fetch(\n        `${config.FIREBASE_URL}answers/${door}.json`\n      )\n        .then((response) => {\n          return response?.json();\n        })\n        .then((data) => {\n          if (data){\n            console.log(\"doorData\", data);\n            const answerKeys = Object.keys(data.answer);\n            const userAnswersTmp = answerKeys.map((x) => {\n              return ({user: data.answer[x].username, answer: data.answer[x].answer})\n            });\n            console.log(userAnswersTmp);\n            setUserAnswers(userAnswersTmp);\n          }\n        });\n    }\n  }, [loggedIn]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const user = username.current.value;\n    const pwd = password.current.value;\n    \n    fetch(\n      `${config.FIREBASE_URL}users/${pwd}${user}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"user?\", user, admin);\n          if (user === admin){\n            setLoggedIn(true);\n          }\n          else{\n            throw new Error(\"nej\");\n          }\n        } else {\n          throw new Error(\"nej\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function givePoints(username, maybeGive) {\n    var tmpScore = newScore[username];\n    if (maybeGive === \"+\") {\n      tmpScore++;\n    } else {\n      tmpScore--;\n    }\n    console.log(tmpScore);\n    console.log(score[username]);\n    newScore[username] = tmpScore;\n    setNewScore(newScore);\n    setRerenderHack(!rerenderHack);\n  } \n\n  function updateUsers(event) {\n    event.preventDefault();\n    fetch(\n      `${config.FIREBASE_URL}score.json`,\n      {\n        method: \"PATCH\",\n        body: JSON.stringify(newScore),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    \n    const adminBody = {admin: admin, door: door, oldScore: score, newScore: newScore, dateTime: new Date()}\n    fetch(\n      `${config.FIREBASE_URL}admin.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(adminBody),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(setScore(newScore))\n    \n  }\n\n  function NotLoggedIn() {\n    return (\n      <form onSubmit={submitHandler}>\n        <input type=\"text\" ref={username} />\n        <input type=\"password\" ref={password} />\n        <button>Logg inn</button>\n      </form>\n    );\n  }\n\n  function UserAnswer({user, answer}){\n    return (\n      <>\n      <div>{user}</div>\n      <div>{answer}</div>\n      </>\n    )\n  }\n\n  function ScoreBoardEntry({username}){\n    return (\n      <>\n      <tr key={username}>\n        <td>\n          {username}({score[username]}) {newScore[username]}{\" \"}\n        </td>\n        <td>\n          <button id={username} onClick={() => {\n            givePoints(username, \"+\")\n          }}>\n            +1\n          </button>\n          <button id={username} onClick={() => {\n            givePoints(username, \"-\")\n          }}>\n            -1\n          </button>\n        </td>\n      </tr>\n      </>\n    )\n  }\n\n  function LoggedIn() {\n    setDoor(doorParam);\n    const usernames = Object.keys(score);\n    return (\n      <>\n      <Card>\n        <h2>Admin - luke {doorParam}</h2>\n        <div>{question}</div>\n        <div>\n          <ul>\n          {userAnswers.map((userAnswer) => {\n            return <li><UserAnswer user={userAnswer.user} answer={userAnswer.answer}/></li>\n          })}\n          </ul>\n        </div>\n      </Card>\n      <Card>\n        <h2>Poeng</h2>\n        <form onSubmit={updateUsers}>\n          <table>\n            <tbody>\n              {usernames.map((username) => (\n                <ScoreBoardEntry username={username} />\n              ))}\n            </tbody>\n          </table>\n          <button>Oppdater</button>\n        </form>\n      </Card>\n      </>)\n  }\n\n  return (\n    <div>\n      {!loggedIn && <NotLoggedIn />}\n      {loggedIn && <LoggedIn />}\n    </div>\n  );\n}\n\nexport default AdminDoor;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport config from \"../config.json\";\nimport img1 from \"../img/advent1.png\";\nimport img2 from \"../img/advent2.png\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\nimport { Link } from \"react-router-dom\";\nimport AdminDoor from \"./AdminDoor\";\n\nfunction Question({ id, door, admin }) {\n  const [visible, setVisible] = useState(false);\n  const [qna, setQna] = useState({});\n\n  useEffect(() => {\n    console.log(id);\n    fetch(\n      `${config.FIREBASE_URL}doorsQnA/${id}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data.qna);\n          setQna(data.qna[keys[0]]);\n        }\n      });\n  }, [id]);\n  function StringOrImg(props) {\n    if (qna.question === \"Rebus1\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus2\") {   \n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus3\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus4\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return <div id=\"question\">{qna.question}</div>;\n    }\n  }\n  return (\n    <Card key={id}>\n      <h2>Luke {door}</h2>\n      <StringOrImg />\n      {visible && <div>{qna.answer}</div>}\n      <button onClick={() => setVisible(!visible)}>\n        {visible ? \"Skjul svar\" : \"Vis svar\"}\n      </button>\n      <button onClick={() => console.log(admin)}>\n        Gi poeng ({admin})\n      </button>\n      <Link to={`../admin/${door}`}>Gi poeng ({admin})</Link>\n    </Card>\n  );\n}\n\nfunction PreviousDoorsPage() {\n  const [idList, setIdList] = useState([]);\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}openedDoors.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          console.log(data);\n          var filteredData = Object.values(data).filter((x) => x);\n          filteredData.pop();\n          var prevQuestionsObj = Object.keys(filteredData);\n          var qObj = prevQuestionsObj.map((x) => {\n            return {\n              question: filteredData[x].question,\n              door: parseInt(x) + 1,\n            };\n          });\n          var ids = qObj.map((x) => {\n            var key = Object.keys(x.question);\n            return { id: x.question[key[0]].id, door: x.door, admin: x.question[key[0]].admin };\n          });\n          setIdList(ids.reverse());\n        }\n      });\n  }, []);\n  return idList.map((x) => <Question key={x.id} id={x.id} door={x.door} admin={x.admin} />);\n}\n\nexport default PreviousDoorsPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef } from \"react\";\nimport config from \"../config.json\"\nimport Card from \"./Card\";\n\nfunction AddUserFrom(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n\n  function tryAddUser(user) {\n    fetch(\n      `${config.FIREBASE_URL}users/username.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          Object.keys(data).forEach((key) => {\n            if (data[key]?.username === user.username) {\n              throw new Error(\"Brukernavnet er opptatt\");\n            }\n          });\n        }\n        return props.onAddedUser(user);\n      })\n      .catch(\n        (err) => (document.getElementById(\"error\").innerHTML = err.message)\n      );\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedUser = {\n      username: nameRef.current.value,\n      password: pwdRef.current.value,\n      submittedAt: new Date(),\n    };\n    try {\n      tryAddUser(submittedUser);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Velg brukernavn og passord</h3>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n          />\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddUserFrom;\n","import AddUserFrom from \"../Components/AddUserForm\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\"\nimport classes from './AddUser.module.scss';\n\nfunction AdminPage() {\n  const navigate = useNavigate();\n  function addUser(user) {\n    addUserWithPassword(user);\n    addUsername({ username: user.username, submittedAt: user.submittedAt });\n  }\n\n  function addUserWithPassword(userWithPassword) {\n    const dbName = `${userWithPassword.password}${userWithPassword.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(userWithPassword),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n  function addUsername(username) {\n    fetch(\n      `${config.FIREBASE_URL}users/username.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(username),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => navigate(\"/takk\"));\n  }\n  return (\n    <div>\n      <section>\n        <AddUserFrom onAddedUser={addUser} />\n      </section>\n      <Link to=\"/admin\" className={classes.secretlink}>.</Link>\n    </div>\n  );\n}\n\nexport default AdminPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef } from \"react\";\n\nimport Card from \"./Card\";\n\nfunction AddDoorForm(props) {\n  const qRef = useRef();\n  const aRef = useRef();\n  const userRef = useRef();\n  const pwdRef = useRef();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedQnA = {\n      id: Math.floor(Math.random() * 10000),\n      question: qRef.current.value,\n      answer: aRef.current.value,\n      submittedAt: new Date(),\n      username: userRef.current.value,\n      password: pwdRef.current.value,\n    };\n    try {\n      props.onAddedQnA(submittedQnA);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Legg inn en ny luke</h3>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"question\"\n            required\n            rows=\"5\"\n            ref={qRef}\n            placeholder=\"Spørsmål\"\n          />\n        </div>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"answer\"\n            rows=\"5\"\n            required\n            ref={aRef}\n            placeholder=\"Svar\"\n          />\n        </div>\n        <div className={classes.control}>\n        <input type=\"text\" ref={userRef} placeholder=\"Brukernavn\"/>\n        <input type=\"password\" ref={pwdRef} placeholder=\"Passord\"/>\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddDoorForm;\n","import AddDoorForm from \"./AddDoorForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\"\n\nfunction AddDoor() {\n  const navigate = useNavigate();\n\n  function checkPasswordAndSubmit(answer) {\n    const dbName = `${answer.password}${answer.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`\n    )\n      .then((response) => {\n        console.log(response);\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          addDoor(answer);\n        } else {\n          throw new Error(\"Brukernavn eller passord er feil\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function addDoor(door) {\n    fetch(\n      `${config.FIREBASE_URL}doorsQnA/${door.id}/qna.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(door),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then(\n        fetch(\n          `${config.FIREBASE_URL}doorsQ/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({ question: door.question, admin: door.username }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(\n        fetch(\n          `${config.FIREBASE_URL}doorIds/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify(door.id),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(navigate(\"/takk\"));\n  }\n\n  return (\n    <div>\n      <section>\n        <AddDoorForm onAddedQnA={checkPasswordAndSubmit} />\n      </section>\n    </div>\n  );\n}\n\nexport default AddDoor;\n","import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport classes from \"./Hamburger.module.scss\";\n\nfunction Hamburger() {\n  const [hamburgerClass, setHamburgerClass] = useState(classes.hamburger);\n  const [navmenuClass, setNavmenuClass] = useState(classes.navmenu);\n  const [open, setOpen] = useState(false);\n\n  function toggle() {\n    if (!open) {\n      setHamburgerClass(classes.hamburger + \" \" + classes.active);\n      setNavmenuClass(classes.navmenu + \" \" + classes.active);\n      setOpen(true);\n    } else {\n      setHamburgerClass(classes.hamburger);\n      setNavmenuClass(classes.navmenu);\n      setOpen(false);\n    }\n  }\n  return (\n    <header>\n      <nav className={classes.navbar}>\n        <Link className={classes.navbranding} to=\"/\">\n          Vitsekalender\n        </Link>\n        <ul className={navmenuClass}>\n          <li className={classes.navitem}>\n            <Link to={`/highscore`} onClick={() => toggle()}>\n              Highscore\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to={`/`} onClick={() => toggle()}>\n              Dagens luke\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/tidligere-luker\" onClick={() => toggle()}>\n              Tidligere luker\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/legg-til-luke\" onClick={() => toggle()}>\n              Nytt spørsmål\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/ny-bruker\" onClick={() => toggle()}>\n              Ny bruker\n            </Link>\n          </li>\n        </ul>\n        <div className={hamburgerClass} onClick={() => toggle()}>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Hamburger;\n","import { Route, Routes } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\nimport Highscore from \"./Components/Highscore\";\nimport ResponsePage from \"./Components/ResponsePage\";\nimport ThankYouPage from \"./Components/ThankYouPage\";\nimport PreviousDoors from \"./Components/PreviousDoorsPage\";\nimport NewUserPage from \"./Components/AddUserPage\";\n// import AdminPage from \"./Components/AdminPage\";\nimport AddDoor from \"./Components/AddDoor\";\nimport AdminDoor from \"./Components/AdminDoor\";\nimport Hamburger from \"./Components/Layout/Hamburger\";\n\nfunction App() {\n  return (\n    <div className={classes.main} id=\"main\">\n      <Hamburger />\n      <Routes>\n        <Route path=\"/\" exact element={<ResponsePage />} />\n        <Route path=\"/highscore\" exact element={<Highscore />} />\n        <Route path=\"/takk\" element={<ThankYouPage />} />\n        <Route path=\"/tidligere-luker\" element={<PreviousDoors />} />\n        <Route path=\"/ny-bruker\" element={<NewUserPage />} />\n        <Route path=\"/legg-til-luke\" element={<AddDoor />} />\n        {/* <Route path=\"/admin\" exact element={<AdminPage />}/> */}\n        <Route path=\"/admin/:doorParam\" element={<AdminDoor/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["Components/Layout/Hamburger.module.scss","Components/ResponseForm.module.css","App.module.scss","Components/Card.module.scss","Components/CountDown.module.scss","Components/ThankYouPage.module.scss","Components/AddUser.module.scss","Components/Admin.module.scss","Components/Card.js","Components/Highscore.js","img/advent1.png","img/advent2.png","img/3desember.jpeg","img/4desember.jpeg","Components/CountDown.js","Components/ResponseForm.js","Components/ResponsePage.js","Components/ThankYouPage.js","Components/AdminDoor.js","Components/PreviousDoorsPage.js","Components/AddUserForm.js","Components/AddUserPage.js","Components/AddDoorForm.js","Components/AddDoor.js","Components/Layout/Hamburger.js","App.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Highscore","useState","userData","setUserData","useEffect","fetch","config","FIREBASE_URL","then","response","json","data","sortedUserList","username","push","sort","a","b","map","index","twoDigitTime","timePart","countTime","diff","Date","getTime","hours","Math","floor","minutes","seconds","days","CountDown","timeLeft","setTimeLeft","timer","setTimeout","clearTimeout","countDown","ResponseForm","nameRef","useRef","pwdRef","messageRef","questionRef","pwd","setPwd","setUsername","question","setQuestion","today","door","getDate","toString","isAdvent","setDate","Question","id","ref","alt","src","img1","width","img2","img3","img4","doorNo","keys","Object","randomId","random","length","questionData","method","body","JSON","stringify","admin","headers","catch","err","user","parse","localStorage","getItem","form","onSubmit","event","preventDefault","submittedForm","current","value","trim","password","answer","submittedAt","console","log","onSubmittedDoor","control","rows","placeholder","type","required","onChange","val","actions","ResponsePage","navigate","useNavigate","dbName","Error","setItem","submitDoorHandler","alert","message","ThankYouPage","text","isQuestion","displayText","to","AdminDoor","loggedIn","setLoggedIn","rerenderHack","setRerenderHack","doorParam","useParams","setDoor","userAnswers","setUserAnswers","setAdmin","localStorageUsername","setLocalStorageUsername","score","setScore","newScore","setNewScore","submitHandler","givePoints","maybeGive","tmpScore","updateUsers","adminBody","oldScore","dateTime","NotLoggedIn","UserAnswer","ScoreBoardEntry","onClick","LoggedIn","usernames","userAnswer","userAnswersTmp","x","visible","setVisible","qna","setQna","StringOrImg","PreviousDoorsPage","idList","setIdList","filteredData","values","filter","pop","ids","parseInt","key","reverse","AddUserFrom","submittedUser","forEach","onAddedUser","document","getElementById","innerHTML","AdminPage","userWithPassword","addUserWithPassword","secretlink","AddDoorForm","qRef","aRef","userRef","submittedQnA","onAddedQnA","AddDoor","Hamburger","hamburger","hamburgerClass","setHamburgerClass","navmenu","navmenuClass","setNavmenuClass","open","setOpen","toggle","active","navbar","navbranding","navitem","bar","App","main","path","exact","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.4ce9c02e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Hamburger_navbar__21JeB\",\"navbranding\":\"Hamburger_navbranding__2JFfS\",\"navmenu\":\"Hamburger_navmenu__2JUuE\",\"navlink\":\"Hamburger_navlink__1PrJC\",\"hamburger\":\"Hamburger_hamburger__36Un3\",\"bar\":\"Hamburger_bar__1W2Nz\",\"active\":\"Hamburger_active__2aKt6\",\"navitem\":\"Hamburger_navitem__2Zqz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ResponseForm_form__1VFJw\",\"control\":\"ResponseForm_control__jRjwf\",\"actions\":\"ResponseForm_actions__1-bhU\",\"lenke\":\"ResponseForm_lenke__2srQj\",\"question\":\"ResponseForm_question__1dZcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3K4pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countDown\":\"CountDown_countDown__bCVze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThankYouPage\":\"ThankYouPage_ThankYouPage__3PRoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secretlink\":\"AddUser_secretlink__3HNu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"Admin_admin__2rWz7\"};","import classes from \"./Card.module.scss\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport config from \"../config.json\";\n\nfunction Highscore() {\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          setUserData(data);\n        }\n      });\n  }, []);\n  var sortedUserList = [];\n  for (var username in userData) {\n    sortedUserList.push([username, userData[username]]);\n  }\n  sortedUserList.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  return (\n    <div>\n      <Card>\n        <h2>Highscore</h2>\n        {sortedUserList !== [] && (\n          <table>\n            <tbody>\n              {sortedUserList.map((username, index) => (\n\n                <tr key={username[0]}>\n                  <td>{username[0]}</td>\n                  <td>{username[1]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </Card>\n    </div>\n  );\n}\n\nexport default Highscore;\n","export default __webpack_public_path__ + \"static/media/advent1.4314d18d.png\";","export default __webpack_public_path__ + \"static/media/advent2.53ffb9fb.png\";","export default __webpack_public_path__ + \"static/media/3desember.84ebc20f.jpeg\";","export default __webpack_public_path__ + \"static/media/4desember.a4f126d3.jpeg\";","import { useState, useEffect } from \"react\";\nimport classes from \"./CountDown.module.scss\"\n\nfunction twoDigitTime(timePart) {\n  return (timePart < 10 ? \"0\" : \"\") + timePart;\n}\n\nfunction countTime() {\n  const eta = new Date(2023, 11, 1, 0, 0, 0).getTime();\n  const now = new Date().getTime();\n  const diff = eta - now;\n  const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);\n  const minutes = Math.floor((diff / (1000 * 60)) % 60);\n  const seconds = Math.floor((diff / 1000) % 60);\n  if (diff > 0)\n    return {\n      days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n      hours: twoDigitTime(hours),\n      minutes: twoDigitTime(minutes),\n      seconds: twoDigitTime(seconds),\n    };\n  return {\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  };\n}\n\nexport function CountDown() {\n  const [timeLeft, setTimeLeft] = useState(countTime());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(countTime());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n\n  return (\n    <div className={classes.countDown}>\n      {timeLeft.days} dager {timeLeft.hours} timer {timeLeft.minutes} minutter\n      og {timeLeft.seconds} sekunder\n    </div>\n  );\n}\n","import classes from \"./ResponseForm.module.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../config.json\"\nimport img1 from \"../img/advent1.png\";\nimport img2 from \"../img/advent2.png\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\n\nimport Card from \"./Card\";\nimport { CountDown } from \"./CountDown\";\n\n\nfunction ResponseForm(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n  const messageRef = useRef();\n  const questionRef = useRef();\n  const [pwd, setPwd] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const [question, setQuestion] = useState(\"\");\n  const today = new Date();\n  const door = today.getDate().toString();\n  const isAdvent = today <= new Date().setDate(24);\n\n  useEffect(() => {\n    openDoor(door);\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user){\n      setPwd(user.pwd);\n      setUsername(user.user);\n    }\n  }, [door]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedForm = {\n      username: nameRef.current.value.toString().trim(),\n      password: pwdRef.current.value,\n      answer: messageRef.current.value,\n      question: question,\n      door: door,\n      submittedAt: new Date(),\n    };\n    console.log(submittedForm);\n    props.onSubmittedDoor(submittedForm);\n  }\n\n  function openDoor(doorNo) {\n    fetch(\n      `${config.FIREBASE_URL}openedDoors/${doorNo}/question.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data);\n          setQuestion(data[keys[0]].question);\n        } else {\n          fetch(\n            `${config.FIREBASE_URL}doorIds.json`\n          )\n            .then((response) => {\n              return response?.json();\n            })\n            .then((data) => {\n              if (data) {\n                var keys = Object.keys(data);\n                var randomId = keys[Math.floor(Math.random() * keys.length)];\n                fetch(\n                  `${config.FIREBASE_URL}doorsQ/${randomId}.json`\n                )\n                  .then((response) => {\n                    return response?.json();\n                  })\n                  .then((data) => {\n                    var keys = Object.keys(data);\n                    var questionData = data[keys[0]];\n                    setQuestion(questionData.question);\n                    fetch(\n                      `${config.FIREBASE_URL}openedDoors/${doorNo}/question.json`,\n                      {\n                        method: \"POST\",\n                        body: JSON.stringify({ question: questionData.question, id: randomId, admin: questionData.admin }),\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                      }\n                    );\n                  })\n                  .then(\n                    fetch(\n                      `${config.FIREBASE_URL}doorIds/${randomId}.json`,\n                      {\n                        method: \"DELETE\",\n                      }\n                    )\n                  )\n                  .catch((err) => {\n                    setQuestion(err);\n                  });\n              } else {setQuestion(\"Tomt for spørsmål :(\")}\n          });\n        }\n      }).catch((err) => setQuestion(\"Tomt for spørsmål :(\"));\n  }\n\n  function Question(props) {\n    if (question === \"Rebus1\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus2\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus3\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus4\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.question} id=\"question\" ref={questionRef}>\n          {question}\n        </div>\n      );\n    }\n  }\n\n  return ( <div>\n    {isAdvent && <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h2>Dagens spørsmål</h2>\n        <Question />\n        <h3>Luke {door}</h3>\n        <div className={classes.control}>\n          <textarea\n            id=\"message\"\n            rows=\"5\"\n            ref={messageRef}\n            placeholder={`Skriv svaret her`}\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n            value={username}\n            onChange={(val) => setUsername(val.value)}\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n            value={pwd}\n            onChange={(val) => setPwd(val.value)}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>}\n    {!isAdvent && \n    <div>\n     <CountDown />\n    </div>}\n    </div>\n  );\n}\n\nexport default ResponseForm;\n","import DoorWithResponse from \"../Components/ResponseForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\";\n\nfunction ResponsePage() {\n  const navigate = useNavigate();\n  function checkPasswordAndSubmit(answer) {\n    const dbName = `${answer.password}${answer.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          submitDoorHandler(answer);\n        } else {\n          throw new Error(\"Brukernavn eller passord er feil\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function submitDoorHandler(answer) {\n    const doorNo = answer.door;\n    var user = {user: answer.username, pwd: answer.password}\n    localStorage.setItem(\"user\", JSON.stringify(user))\n    fetch(\n      `${config.FIREBASE_URL}answers/${doorNo}/answer.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(answer),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => {\n      navigate(\"/takk\");\n    });\n  }\n  return (\n    <div>\n      <section>\n        <DoorWithResponse onSubmittedDoor={checkPasswordAndSubmit} />\n      </section>\n    </div>\n  );\n}\n\nexport default ResponsePage;\n","import { Link } from \"react-router-dom\";\nimport classes from './ThankYouPage.module.scss';\n\nfunction ThankYouPage({text, isQuestion}) {\n  var displayText = text ? text : \"Lukesvar er notert! <br/>Håper det var riktig &#129310;\"\n  return (\n    <div className={classes.ThankYouPage}>\n    <div>{displayText}</div>\n    {isQuestion && <Link to=\"/legg-til-luke\">Legg inn en til</Link>}\n    </div>\n  );\n}\n\nexport default ThankYouPage;\n","import { useRef, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport config from \"../config.json\";\nimport classes from './Admin.module.scss';\nimport Card from \"./Card\";\n\nfunction AdminDoor() {\n  const username = useRef();\n  const password = useRef();\n  const doorNo = useRef();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [rerenderHack, setRerenderHack] = useState(false);\n  let { doorParam } = useParams();\n  const [door, setDoor] = useState(doorParam);\n  const [qna, setQna] = useState({});\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [admin, setAdmin] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [localStorageUsername, setLocalStorageUsername] = useState(\"\");\n\n  const [score, setScore] = useState({});\n  const [newScore, setNewScore] = useState({});\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user){\n      setPwd(user.pwd);\n      setLocalStorageUsername(user.user);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        setScore(data);\n      });\n  }, []);\n  \n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        setNewScore(data);\n      });\n  }, []);\n\n\n  useEffect(() => {\n    fetch(`${config.FIREBASE_URL}openedDoors/${door}.json`)\n    .then((response) => {\n      return response?.json();\n    })\n    .then((data) => {\n      if (data){\n        var keys = Object.keys(data.question)\n        setAdmin(data.question[keys].admin);\n        setQuestion(data.question[keys].question);\n      }\n    });\n  }, [])\n\n  useEffect(() => {\n    if (true) {\n      fetch(\n        `${config.FIREBASE_URL}answers/${door}.json`\n      )\n        .then((response) => {\n          return response?.json();\n        })\n        .then((data) => {\n          if (data){\n            console.log(\"doorData\", data);\n            const answerKeys = Object.keys(data.answer);\n            const userAnswersTmp = answerKeys.map((x) => {\n              return ({user: data.answer[x].username, answer: data.answer[x].answer})\n            });\n            console.log(userAnswersTmp);\n            setUserAnswers(userAnswersTmp);\n          }\n        });\n    }\n  }, [loggedIn]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const user = username.current.value;\n    const pwd = password.current.value;\n    \n    fetch(\n      `${config.FIREBASE_URL}users/${pwd}${user}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          console.log(\"user?\", user, admin);\n          if (user === admin){\n            setLoggedIn(true);\n          }\n          else{\n            throw new Error(\"nej\");\n          }\n        } else {\n          throw new Error(\"nej\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function givePoints(username, maybeGive) {\n    var tmpScore = newScore[username];\n    if (maybeGive === \"+\") {\n      tmpScore++;\n    } else {\n      tmpScore--;\n    }\n    console.log(tmpScore);\n    console.log(score[username]);\n    newScore[username] = tmpScore;\n    setNewScore(newScore);\n    setRerenderHack(!rerenderHack);\n  } \n\n  function updateUsers(event) {\n    event.preventDefault();\n    fetch(\n      `${config.FIREBASE_URL}score.json`,\n      {\n        method: \"PATCH\",\n        body: JSON.stringify(newScore),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    \n    const adminBody = {admin: admin, door: door, oldScore: score, newScore: newScore, dateTime: new Date()}\n    fetch(\n      `${config.FIREBASE_URL}admin.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(adminBody),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(setScore(newScore))\n    \n  }\n\n  function NotLoggedIn() {\n    return (\n      <form onSubmit={submitHandler}>\n        <input type=\"text\" value={localStorageUsername} ref={username} />\n        <input type=\"password\" value={pwd} ref={password} />\n        <button>Logg inn</button>\n      </form>\n    );\n  }\n\n  function UserAnswer({user, answer}){\n    return (\n      <>\n      <div>{user}</div>\n      <div>{answer}</div>\n      </>\n    )\n  }\n\n  function ScoreBoardEntry({username}){\n    return (\n      <>\n      <tr key={username}>\n        <td>\n          {username}({score[username]}) {newScore[username]}{\" \"}\n        </td>\n        <td>\n          <button id={username} onClick={() => {\n            givePoints(username, \"+\")\n          }}>\n            +1\n          </button>\n          <button id={username} onClick={() => {\n            givePoints(username, \"-\")\n          }}>\n            -1\n          </button>\n        </td>\n      </tr>\n      </>\n    )\n  }\n\n  function LoggedIn() {\n    setDoor(doorParam);\n    const usernames = Object.keys(score);\n    return (\n      <>\n      <Card>\n        <h2>Admin - luke {doorParam}</h2>\n        <div>{question}</div>\n        <div>\n          <ul>\n          {userAnswers.map((userAnswer) => {\n            return <li><UserAnswer user={userAnswer.user} answer={userAnswer.answer}/></li>\n          })}\n          </ul>\n        </div>\n      </Card>\n      <Card>\n        <h2>Poeng</h2>\n        <form onSubmit={updateUsers}>\n          <table>\n            <tbody>\n              {usernames.map((username) => (\n                <ScoreBoardEntry username={username} />\n              ))}\n            </tbody>\n          </table>\n          <button>Oppdater</button>\n        </form>\n      </Card>\n      </>)\n  }\n\n  return (\n    <div>\n      {!loggedIn && <NotLoggedIn />}\n      {loggedIn && <LoggedIn />}\n    </div>\n  );\n}\n\nexport default AdminDoor;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport config from \"../config.json\";\nimport img1 from \"../img/advent1.png\";\nimport img2 from \"../img/advent2.png\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\nimport { Link } from \"react-router-dom\";\nimport AdminDoor from \"./AdminDoor\";\n\nfunction Question({ id, door, admin }) {\n  const [visible, setVisible] = useState(false);\n  const [qna, setQna] = useState({});\n\n  useEffect(() => {\n    console.log(id);\n    fetch(\n      `${config.FIREBASE_URL}doorsQnA/${id}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data.qna);\n          setQna(data.qna[keys[0]]);\n        }\n      });\n  }, [id]);\n  function StringOrImg(props) {\n    if (qna.question === \"Rebus1\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus2\") {   \n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus3\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus4\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return <div id=\"question\">{qna.question}</div>;\n    }\n  }\n  return (\n    <Card key={id}>\n      <h2>Luke {door}</h2>\n      <StringOrImg />\n      {visible && <div>{qna.answer}</div>}\n      <button onClick={() => setVisible(!visible)}>\n        {visible ? \"Skjul svar\" : \"Vis svar\"}\n      </button>\n      <button onClick={() => console.log(admin)}>\n        Gi poeng ({admin})\n      </button>\n      <Link to={`../admin/${door}`}>Gi poeng ({admin})</Link>\n    </Card>\n  );\n}\n\nfunction PreviousDoorsPage() {\n  const [idList, setIdList] = useState([]);\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}openedDoors.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          console.log(data);\n          var filteredData = Object.values(data).filter((x) => x);\n          filteredData.pop();\n          var prevQuestionsObj = Object.keys(filteredData);\n          var qObj = prevQuestionsObj.map((x) => {\n            return {\n              question: filteredData[x].question,\n              door: parseInt(x) + 1,\n            };\n          });\n          var ids = qObj.map((x) => {\n            var key = Object.keys(x.question);\n            return { id: x.question[key[0]].id, door: x.door, admin: x.question[key[0]].admin };\n          });\n          setIdList(ids.reverse());\n        }\n      });\n  }, []);\n  return idList.map((x) => <Question key={x.id} id={x.id} door={x.door} admin={x.admin} />);\n}\n\nexport default PreviousDoorsPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef } from \"react\";\nimport config from \"../config.json\"\nimport Card from \"./Card\";\n\nfunction AddUserFrom(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n\n  function tryAddUser(user) {\n    fetch(\n      `${config.FIREBASE_URL}users/username.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          Object.keys(data).forEach((key) => {\n            if (data[key]?.username === user.username) {\n              throw new Error(\"Brukernavnet er opptatt\");\n            }\n          });\n        }\n        return props.onAddedUser(user);\n      })\n      .catch(\n        (err) => (document.getElementById(\"error\").innerHTML = err.message)\n      );\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedUser = {\n      username: nameRef.current.value,\n      password: pwdRef.current.value,\n      submittedAt: new Date(),\n    };\n    try {\n      tryAddUser(submittedUser);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Velg brukernavn og passord</h3>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n          />\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddUserFrom;\n","import AddUserFrom from \"../Components/AddUserForm\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\"\nimport classes from './AddUser.module.scss';\n\nfunction AdminPage() {\n  const navigate = useNavigate();\n  function addUser(user) {\n    addUserWithPassword(user);\n    addUsername({ username: user.username, submittedAt: user.submittedAt });\n  }\n\n  function addUserWithPassword(userWithPassword) {\n    const dbName = `${userWithPassword.password}${userWithPassword.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(userWithPassword),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n  function addUsername(username) {\n    fetch(\n      `${config.FIREBASE_URL}users/username.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(username),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => navigate(\"/bruker-opprettet\"));\n  }\n  return (\n    <div>\n      <section>\n        <AddUserFrom onAddedUser={addUser} />\n      </section>\n      <Link to=\"/admin\" className={classes.secretlink}>.</Link>\n    </div>\n  );\n}\n\nexport default AdminPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef, useState, useEffect } from \"react\";\n\nimport Card from \"./Card\";\n\nfunction AddDoorForm(props) {\n  const qRef = useRef();\n  const aRef = useRef();\n  const userRef = useRef();\n  const pwdRef = useRef();\n  const [pwd, setPwd] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user){\n      setPwd(user.pwd);\n      setUsername(user.user);\n    }\n  }, []);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedQnA = {\n      id: Math.floor(Math.random() * 10000),\n      question: qRef.current.value,\n      answer: aRef.current.value,\n      submittedAt: new Date(),\n      username: userRef.current.value,\n      password: pwdRef.current.value,\n    };\n    try {\n      props.onAddedQnA(submittedQnA);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Legg inn en ny luke</h3>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"question\"\n            required\n            rows=\"5\"\n            ref={qRef}\n            placeholder=\"Spørsmål\"\n          />\n        </div>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"answer\"\n            rows=\"5\"\n            required\n            ref={aRef}\n            placeholder=\"Svar\"\n          />\n        </div>\n        <div className={classes.control}>\n        <input type=\"text\" ref={userRef} value={username} placeholder=\"Brukernavn\"/>\n        <input type=\"password\" ref={pwdRef} value={pwd} placeholder=\"Passord\"/>\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddDoorForm;\n","import AddDoorForm from \"./AddDoorForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\"\n\nfunction AddDoor() {\n  const navigate = useNavigate();\n\n  function checkPasswordAndSubmit(answer) {\n    const dbName = `${answer.password}${answer.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`\n    )\n      .then((response) => {\n        console.log(response);\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          addDoor(answer);\n        } else {\n          throw new Error(\"Brukernavn eller passord er feil\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function addDoor(door) {\n    fetch(\n      `${config.FIREBASE_URL}doorsQnA/${door.id}/qna.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(door),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then(\n        fetch(\n          `${config.FIREBASE_URL}doorsQ/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({ question: door.question, admin: door.username }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(\n        fetch(\n          `${config.FIREBASE_URL}doorIds/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify(door.id),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(navigate(\"/luke-opprettet\"));\n  }\n\n  return (\n    <div>\n      <section>\n        <AddDoorForm onAddedQnA={checkPasswordAndSubmit} />\n      </section>\n    </div>\n  );\n}\n\nexport default AddDoor;\n","import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport classes from \"./Hamburger.module.scss\";\n\nfunction Hamburger() {\n  const [hamburgerClass, setHamburgerClass] = useState(classes.hamburger);\n  const [navmenuClass, setNavmenuClass] = useState(classes.navmenu);\n  const [open, setOpen] = useState(false);\n\n  function toggle() {\n    if (!open) {\n      setHamburgerClass(classes.hamburger + \" \" + classes.active);\n      setNavmenuClass(classes.navmenu + \" \" + classes.active);\n      setOpen(true);\n    } else {\n      setHamburgerClass(classes.hamburger);\n      setNavmenuClass(classes.navmenu);\n      setOpen(false);\n    }\n  }\n  return (\n    <header>\n      <nav className={classes.navbar}>\n        <Link className={classes.navbranding} to=\"/\">\n          Vitsekalender\n        </Link>\n        <ul className={navmenuClass}>\n          <li className={classes.navitem}>\n            <Link to={`/highscore`} onClick={() => toggle()}>\n              Highscore\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to={`/`} onClick={() => toggle()}>\n              Dagens luke\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/tidligere-luker\" onClick={() => toggle()}>\n              Tidligere luker\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/legg-til-luke\" onClick={() => toggle()}>\n              Nytt spørsmål\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/ny-bruker\" onClick={() => toggle()}>\n              Ny bruker\n            </Link>\n          </li>\n        </ul>\n        <div className={hamburgerClass} onClick={() => toggle()}>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Hamburger;\n","import { Route, Routes } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\nimport Highscore from \"./Components/Highscore\";\nimport ResponsePage from \"./Components/ResponsePage\";\nimport ThankYouPage from \"./Components/ThankYouPage\";\nimport PreviousDoors from \"./Components/PreviousDoorsPage\";\nimport NewUserPage from \"./Components/AddUserPage\";\n// import AdminPage from \"./Components/AdminPage\";\nimport AddDoor from \"./Components/AddDoor\";\nimport AdminDoor from \"./Components/AdminDoor\";\nimport Hamburger from \"./Components/Layout/Hamburger\";\n\nfunction App() {\n  return (\n    <div className={classes.main} id=\"main\">\n      <Hamburger />\n      <Routes>\n        <Route path=\"/\" exact element={<ResponsePage />} />\n        <Route path=\"/highscore\" exact element={<Highscore />} />\n        <Route path=\"/takk\" element={<ThankYouPage />} />\n        <Route path=\"/bruker-opprettet\" element={<ThankYouPage text=\"Bruker opprettet!\" />} />\n        <Route path=\"/luke-opprettet\" element={<ThankYouPage text=\"Spørsmål lagret!\" isQuestion />} />\n        <Route path=\"/tidligere-luker\" element={<PreviousDoors />} />\n        <Route path=\"/ny-bruker\" element={<NewUserPage />} />\n        <Route path=\"/legg-til-luke\" element={<AddDoor />} />\n        {/* <Route path=\"/admin\" exact element={<AdminPage />}/> */}\n        <Route path=\"/admin/:doorParam\" element={<AdminDoor/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
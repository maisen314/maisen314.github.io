{"version":3,"sources":["Components/Layout/Hamburger.module.scss","Components/ResponseForm.module.css","App.module.scss","Components/Card.module.scss","Components/ThankYouPage.module.scss","Components/AddUser.module.scss","Components/Admin.module.scss","Components/Card.js","Components/Highscore.js","img/advent1.png","img/advent2.png","img/3desember.jpeg","img/4desember.jpeg","Components/ResponseForm.js","Components/ResponsePage.js","Components/ThankYouPage.js","Components/PreviousDoorsPage.js","Components/AddUserForm.js","Components/AddUserPage.js","Components/AdminPage.js","Components/AddDoorForm.js","Components/AddDoor.js","Components/Layout/Hamburger.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Highscore","useState","userData","setUserData","useEffect","fetch","config","FIREBASE_URL","then","response","json","data","sortedUserList","username","push","sort","a","b","map","index","ResponseForm","nameRef","useRef","pwdRef","messageRef","questionRef","pwd","setPwd","setUsername","question","setQuestion","today","Date","door","getDate","toString","isAdvent","setDate","Question","id","ref","alt","src","img1","width","img2","img3","img4","doorNo","keys","Object","randomId","Math","floor","random","length","q","method","body","JSON","stringify","headers","catch","err","user","parse","localStorage","getItem","form","onSubmit","event","preventDefault","submittedForm","current","value","trim","password","answer","submittedAt","console","log","onSubmittedDoor","control","rows","placeholder","type","required","onChange","val","actions","lenke","to","ResponsePage","navigate","useNavigate","dbName","Error","setItem","submitDoorHandler","alert","message","ThankYouPage","visible","setVisible","qna","setQna","StringOrImg","onClick","PreviousDoorsPage","idList","setIdList","filteredData","filter","x","pop","ids","parseInt","key","reverse","AddUserFrom","submittedUser","forEach","onAddedUser","document","getElementById","innerHTML","AdminPage","userWithPassword","addUserWithPassword","secretlink","loggedIn","setLoggedIn","rerenderHack","setRerenderHack","setDoor","userAnswers","setUserAnswers","users","setUsers","submitHandler","givePoints","maybeGive","tmpScore","setSetDoor","no","updateUsers","NotLoggedIn","LoggedIn","usernames","admin","qkey","qid","AddDoorForm","qRef","aRef","submittedQnA","onAddedQnA","AddDoor","Hamburger","hamburger","hamburgerClass","setHamburgerClass","navmenu","navmenuClass","setNavmenuClass","open","setOpen","toggle","active","navbar","navbranding","navitem","bar","App","main","path","exact","element"],"mappings":"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","file":"static/js/main.9db42603.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Hamburger_navbar__21JeB\",\"navbranding\":\"Hamburger_navbranding__2JFfS\",\"navmenu\":\"Hamburger_navmenu__2JUuE\",\"navlink\":\"Hamburger_navlink__1PrJC\",\"hamburger\":\"Hamburger_hamburger__36Un3\",\"bar\":\"Hamburger_bar__1W2Nz\",\"active\":\"Hamburger_active__2aKt6\",\"navitem\":\"Hamburger_navitem__2Zqz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ResponseForm_form__1VFJw\",\"control\":\"ResponseForm_control__jRjwf\",\"actions\":\"ResponseForm_actions__1-bhU\",\"lenke\":\"ResponseForm_lenke__2srQj\",\"question\":\"ResponseForm_question__1dZcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3K4pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThankYouPage\":\"ThankYouPage_ThankYouPage__3PRoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secretlink\":\"AddUser_secretlink__3HNu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"Admin_admin__2rWz7\"};","import classes from \"./Card.module.scss\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport config from \"../config.json\";\n\nfunction Highscore() {\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          setUserData(data);\n        }\n      });\n  }, []);\n  var sortedUserList = [];\n  for (var username in userData) {\n    sortedUserList.push([username, userData[username]]);\n  }\n  sortedUserList.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  return (\n    <div>\n      <Card>\n        <h2>Highscore</h2>\n        {sortedUserList !== [] && (\n          <table>\n            <tbody>\n              {sortedUserList.map((username, index) => (\n\n                <tr key={username[0]}>\n                  <td>{username[0]}</td>\n                  <td>{username[1]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </Card>\n    </div>\n  );\n}\n\nexport default Highscore;\n","export default __webpack_public_path__ + \"static/media/advent1.4314d18d.png\";","export default __webpack_public_path__ + \"static/media/advent2.53ffb9fb.png\";","export default __webpack_public_path__ + \"static/media/3desember.84ebc20f.jpeg\";","export default __webpack_public_path__ + \"static/media/4desember.a4f126d3.jpeg\";","import classes from \"./ResponseForm.module.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../config.json\"\nimport img1 from \"../img/advent1.png\";\nimport img2 from \"../img/advent2.png\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\n\nimport Card from \"./Card\";\n\n\nfunction ResponseForm(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n  const messageRef = useRef();\n  const questionRef = useRef();\n  const [pwd, setPwd] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n\n  const [question, setQuestion] = useState(\"\");\n  const today = new Date();\n  const door = today.getDate().toString();\n  const isAdvent = today <= new Date().setDate(24);\n\n  useEffect(() => {\n    openDoor(door);\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user){\n      setPwd(user.pwd);\n      setUsername(user.user);\n    }\n  }, [door]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedForm = {\n      username: nameRef.current.value.toString().trim(),\n      password: pwdRef.current.value,\n      answer: messageRef.current.value,\n      question: questionRef.current.value,\n      door: door,\n      submittedAt: new Date(),\n    };\n    console.log(submittedForm);\n    props.onSubmittedDoor(submittedForm);\n  }\n\n  function openDoor(doorNo) {\n    fetch(\n      `${config.FIREBASE_URL}openedDoors/${doorNo}/question.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data);\n          setQuestion(data[keys[0]].question);\n        } else {\n          fetch(\n            `${config.FIREBASE_URL}doorIds.json`\n          )\n            .then((response) => {\n              return response?.json();\n            })\n            .then((data) => {\n              if (data) {\n                var keys = Object.keys(data);\n                var randomId = keys[Math.floor(Math.random() * keys.length)];\n                fetch(\n                  `${config.FIREBASE_URL}doorsQ/${randomId}.json`\n                )\n                  .then((response) => {\n                    return response?.json();\n                  })\n                  .then((data) => {\n                    var keys = Object.keys(data);\n                    var q = data[keys[0]].question;\n                    setQuestion(q);\n                    fetch(\n                      `${config.FIREBASE_URL}openedDoors/${doorNo}/question.json`,\n                      {\n                        method: \"POST\",\n                        body: JSON.stringify({ question: q, id: randomId }),\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                      }\n                    );\n                  })\n                  .then(\n                    fetch(\n                      `${config.FIREBASE_URL}doorIds/${randomId}.json`,\n                      {\n                        method: \"DELETE\",\n                      }\n                    )\n                  )\n                  .catch((err) => {\n                    setQuestion(err);\n                  });\n              } else {setQuestion(\"Tomt for spørsmål :(\")}\n          });\n        }\n      }).catch((err) => setQuestion(\"Tomt for spørsmål :(\"));\n  }\n\n  function Question(props) {\n    if (question === \"Rebus1\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus2\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus3\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus4\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.question} id=\"question\" ref={questionRef}>\n          {question}\n        </div>\n      );\n    }\n  }\n\n  return ( <div>\n    {isAdvent && <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h2>Dagens spørsmål</h2>\n        <Question />\n        <h3>Luke {door}</h3>\n        <div className={classes.control}>\n          <textarea\n            id=\"message\"\n            rows=\"5\"\n            ref={messageRef}\n            placeholder={`Skriv svaret her`}\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n            value={username}\n            onChange={(val) => setUsername(val.value)}\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n            value={pwd}\n            onChange={(val) => setPwd(val.value)}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>}\n    {!isAdvent && \n    <div>\n    <div>\n      Advent er over. \n    </div>\n    <div>\n      <Link className={classes.lenke} to=\"/tidligere-spørsmål\" >Du kan se her fram til neste advent</Link>\n    </div>\n    </div>}\n    </div>\n  );\n}\n\nexport default ResponseForm;\n","import DoorWithResponse from \"../Components/ResponseForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\";\n\nfunction ResponsePage() {\n  const navigate = useNavigate();\n  function checkPasswordAndSubmit(answer) {\n    const dbName = `${answer.password}${answer.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          submitDoorHandler(answer);\n        } else {\n          throw new Error(\"Brukernavn eller passord er feil\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function submitDoorHandler(answer) {\n    const doorNo = answer.door;\n    var user = {user: answer.username, pwd: answer.password}\n    localStorage.setItem(\"user\", JSON.stringify(user))\n    fetch(\n      `${config.FIREBASE_URL}openedDoors/${doorNo}/answer.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(answer),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => {\n      navigate(\"/takk\");\n    });\n  }\n  return (\n    <div>\n      <section>\n        <DoorWithResponse onSubmittedDoor={checkPasswordAndSubmit} />\n      </section>\n    </div>\n  );\n}\n\nexport default ResponsePage;\n","import classes from './ThankYouPage.module.scss';\n\nfunction ThankYouPage() {\n  return <div className={classes.ThankYouPage}>Lukesvar er notert! <br/>Håper det var riktig &#129310;</div>;\n}\n\nexport default ThankYouPage;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport config from \"../config.json\";\nimport img1 from \"../img/advent1.png\";\nimport img2 from \"../img/advent2.png\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\n\nfunction Question({ id, door }) {\n  const [visible, setVisible] = useState(false);\n  const [qna, setQna] = useState({});\n\n  useEffect(() => {\n    console.log(id);\n    fetch(\n      `${config.FIREBASE_URL}doorsQnA/${id}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data.qna);\n          setQna(data.qna[keys[0]]);\n        }\n      });\n  }, [id]);\n  function StringOrImg(props) {\n    if (qna.question === \"Rebus1\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus2\") {   \n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus3\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus4\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return <div id=\"question\">{qna.question}</div>;\n    }\n  }\n  return (\n    <Card key={id}>\n      <h2>Luke {door}</h2>\n      <StringOrImg />\n      {visible && <div>{qna.answer}</div>}\n      <button onClick={() => setVisible(!visible)}>\n        {visible ? \"Skjul svar\" : \"Vis svar\"}\n      </button>\n    </Card>\n  );\n}\n\nfunction PreviousDoorsPage() {\n  const [idList, setIdList] = useState([]);\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}openedDoors.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          console.log(data);\n          var filteredData = data.filter((x) => x);\n          filteredData.pop();\n          var prevQuestionsObj = Object.keys(filteredData);\n          var qObj = prevQuestionsObj.map((x) => {\n            return {\n              question: filteredData[x].question,\n              door: parseInt(x) + 1,\n            };\n          });\n          var ids = qObj.map((x) => {\n            var key = Object.keys(x.question);\n            return { id: x.question[key[0]].id, door: x.door };\n          });\n          setIdList(ids.reverse());\n        }\n      });\n  }, []);\n  return idList.map((x) => <Question key={x.id} id={x.id} door={x.door} />);\n}\n\nexport default PreviousDoorsPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef } from \"react\";\nimport config from \"../config.json\"\nimport Card from \"./Card\";\n\nfunction AddUserFrom(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n\n  function tryAddUser(user) {\n    fetch(\n      `${config.FIREBASE_URL}users/username.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          Object.keys(data).forEach((key) => {\n            if (data[key]?.username === user.username) {\n              throw new Error(\"Brukernavnet er opptatt\");\n            }\n          });\n        }\n        return props.onAddedUser(user);\n      })\n      .catch(\n        (err) => (document.getElementById(\"error\").innerHTML = err.message)\n      );\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedUser = {\n      username: nameRef.current.value,\n      password: pwdRef.current.value,\n      submittedAt: new Date(),\n    };\n    try {\n      tryAddUser(submittedUser);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Velg brukernavn og passord</h3>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n          />\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddUserFrom;\n","import AddUserFrom from \"../Components/AddUserForm\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\"\nimport classes from './AddUser.module.scss';\n\nfunction AdminPage() {\n  const navigate = useNavigate();\n  function addUser(user) {\n    addUserWithPassword(user);\n    addUsername({ username: user.username, submittedAt: user.submittedAt });\n  }\n\n  function addUserWithPassword(userWithPassword) {\n    const dbName = `${userWithPassword.password}${userWithPassword.username}`;\n    fetch(\n      `${config.FIREBASE_URL}users/${dbName}.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(userWithPassword),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n  function addUsername(username) {\n    fetch(\n      `${config.FIREBASE_URL}users/username.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(username),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => navigate(\"/takk\"));\n  }\n  return (\n    <div>\n      <section>\n        <AddUserFrom onAddedUser={addUser} />\n      </section>\n      <Link to=\"/admin\" className={classes.secretlink}>.</Link>\n    </div>\n  );\n}\n\nexport default AdminPage;\n","import { useRef, useState, useEffect } from \"react\";\nimport config from \"../config.json\";\nimport classes from './Admin.module.scss';\n\nfunction AdminPage() {\n  const username = useRef();\n  const password = useRef();\n  const doorNo = useRef();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [rerenderHack, setRerenderHack] = useState(false);\n  const [door, setDoor] = useState(\"\");\n  const [qna, setQna] = useState({});\n  const [userAnswers, setUserAnswers] = useState({});\n\n  const [users, setUsers] = useState({});\n\n  useEffect(() => {\n    fetch(\n      `${config.FIREBASE_URL}score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        setUsers(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (door !== \"\") {\n      fetch(\n        `${config.FIREBASE_URL}openedDoors/${door}.json`\n      )\n        .then((response) => {\n          return response?.json();\n        })\n        .then((data) => {\n          setUserAnswers(data.answer);\n          const qkey = Object.keys(data.question);\n          const qid = data.question[qkey[0]].id;\n          fetch(\n            `${config.FIREBASE_URL}doorsQnA/${qid}.json`\n          )\n            .then((response) => {\n              return response?.json();\n            })\n            .then((data) => {\n              if (data) {\n                var keys = Object.keys(data.qna);\n                setQna(data.qna[keys[0]]);\n              }\n            });\n        });\n    }\n  }, [door]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const user = username.current.value;\n    const pwd = password.current.value;\n    if (user === \"sjef\" && pwd === \"sjef1\") {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  }\n\n  function givePoints(username, maybeGive) {\n    var tmpScore = users[username];\n    if (maybeGive === \"+\") {\n      tmpScore++;\n    } else {\n      tmpScore--;\n    }\n\n    users[username] = tmpScore;\n    setUsers(users);\n    setRerenderHack(!rerenderHack);\n  }\n\n  function setSetDoor(event) {\n    event.preventDefault();\n\n    const no = doorNo.current.value;\n    setDoor(no);\n  }\n\n  function updateUsers(event) {\n    event.preventDefault();\n    fetch(\n      `${config.FIREBASE_URL}score.json`,\n      {\n        method: \"PATCH\",\n        body: JSON.stringify(users),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n\n  function NotLoggedIn() {\n    return (\n      <form onSubmit={submitHandler}>\n        <input type=\"text\" ref={username} />\n        <input type=\"password\" ref={password} />\n        <button>prøv</button>\n      </form>\n    );\n  }\n\n  function LoggedIn() {\n    const usernames = Object.keys(users);\n    return (\n      <div className={classes.admin}>\n        <form onSubmit={setSetDoor}>\n          <input type=\"text\" ref={doorNo} />\n          <div>Spørsmål</div>\n          <pre id=\"questionP\">{JSON.stringify(qna, null, 2)}</pre>\n          <pre id=\"answers\">{JSON.stringify(userAnswers, null, 2)}</pre>\n          <button>butt</button>\n        </form>\n        <form onSubmit={updateUsers}>\n          <table>\n            <tbody>\n              {usernames.map((username) => (\n                <tr key={username}>\n                  <td>\n                    {username} {users[username]}{\" \"}\n                  </td>\n                  <td>\n                    <button onClick={() => givePoints(username, \"+\")}>\n                      +1\n                    </button>\n                    <button onClick={() => givePoints(username, \"-\")}>\n                      -1\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button>Oppdater</button>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {!loggedIn && <NotLoggedIn />}\n      {loggedIn && <LoggedIn />}\n    </div>\n  );\n}\n\nexport default AdminPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef } from \"react\";\n\nimport Card from \"./Card\";\n\nfunction AddDoorForm(props) {\n  const qRef = useRef();\n  const aRef = useRef();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedQnA = {\n      id: Math.floor(Math.random() * 10000),\n      question: qRef.current.value,\n      answer: aRef.current.value,\n      submittedAt: new Date(),\n    };\n    try {\n      props.onAddedQnA(submittedQnA);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Legg inn en ny luke</h3>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"question\"\n            required\n            rows=\"5\"\n            ref={qRef}\n            placeholder=\"Spørsmål\"\n          />\n        </div>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"answer\"\n            rows=\"5\"\n            required\n            ref={aRef}\n            placeholder=\"Svar\"\n          />\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddDoorForm;\n","import AddDoorForm from \"./AddDoorForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport config from \"../config.json\"\n\nfunction AddDoor() {\n  const navigate = useNavigate();\n\n  function addDoor(door) {\n    fetch(\n      `${config.FIREBASE_URL}doorsQnA/${door.id}/qna.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(door),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then(\n        fetch(\n          `${config.FIREBASE_URL}doorsQ/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({ question: door.question }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(\n        fetch(\n          `${config.FIREBASE_URL}doorIds/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify(door.id),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(navigate(\"/takk\"));\n  }\n\n  return (\n    <div>\n      <section>\n        <AddDoorForm onAddedQnA={addDoor} />\n      </section>\n    </div>\n  );\n}\n\nexport default AddDoor;\n","import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport classes from \"./Hamburger.module.scss\";\n\nfunction Hamburger() {\n  const [hamburgerClass, setHamburgerClass] = useState(classes.hamburger);\n  const [navmenuClass, setNavmenuClass] = useState(classes.navmenu);\n  const [open, setOpen] = useState(false);\n\n  function toggle() {\n    if (!open) {\n      setHamburgerClass(classes.hamburger + \" \" + classes.active);\n      setNavmenuClass(classes.navmenu + \" \" + classes.active);\n      setOpen(true);\n    } else {\n      setHamburgerClass(classes.hamburger);\n      setNavmenuClass(classes.navmenu);\n      setOpen(false);\n    }\n  }\n  return (\n    <header>\n      <nav className={classes.navbar}>\n        <Link className={classes.navbranding} to=\"/\">\n          Vitsekalender\n        </Link>\n        <ul className={navmenuClass}>\n          <li className={classes.navitem}>\n            <Link to={`/highscore`} onClick={() => toggle()}>\n              Highscore\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to={`/`} onClick={() => toggle()}>\n              Dagens luke\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/tidligere-luker\" onClick={() => toggle()}>\n              Tidligere luker\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/legg-til-luke\" onClick={() => toggle()}>\n              Nytt spørsmål\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/ny-bruker\" onClick={() => toggle()}>\n              Ny bruker\n            </Link>\n          </li>\n        </ul>\n        <div className={hamburgerClass} onClick={() => toggle()}>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Hamburger;\n","import { Route, Routes } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\nimport Highscore from \"./Components/Highscore\";\nimport ResponsePage from \"./Components/ResponsePage\";\nimport ThankYouPage from \"./Components/ThankYouPage\";\nimport PreviousDoors from \"./Components/PreviousDoorsPage\";\nimport NewUserPage from \"./Components/AddUserPage\";\nimport AdminPage from \"./Components/AdminPage\";\nimport AddDoor from \"./Components/AddDoor\";\nimport Hamburger from \"./Components/Layout/Hamburger\";\n\nfunction App() {\n  return (\n    <div className={classes.main} id=\"main\">\n      <Hamburger />\n      <Routes>\n        <Route path=\"/\" exact element={<ResponsePage />} />\n        <Route path=\"/highscore\" exact element={<Highscore />} />\n        <Route path=\"/takk\" element={<ThankYouPage />} />\n        <Route path=\"/tidligere-luker\" element={<PreviousDoors />} />\n        <Route path=\"/ny-bruker\" element={<NewUserPage />} />\n        <Route path=\"/legg-til-luke\" element={<AddDoor />} />\n        <Route path=\"/admin\" element={<AdminPage />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App; \n"],"sourceRoot":""}
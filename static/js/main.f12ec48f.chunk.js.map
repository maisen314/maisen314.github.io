{"version":3,"sources":["Components/Layout/Hamburger.module.scss","Components/ResponseForm.module.css","App.module.scss","Components/Card.module.scss","Components/Card.js","Pages/Highscore.js","img/1desember.jpeg","img/2desember.jpeg","img/3desember.jpeg","img/4desember.jpeg","Components/ResponseForm.js","Pages/ResponsePage.js","Pages/ThankYouPage.js","Pages/PreviousDoorsPage.js","Components/AddUserForm.js","Pages/AddUserPage.js","Pages/AdminPage.js","Components/AddDoorForm.js","Pages/AddDoor.js","Components/Layout/Hamburger.js","Pages/Hackerfaen.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Highscore","useState","userData","setUserData","useEffect","fetch","then","response","json","data","sortedUserList","username","push","sort","a","b","map","ResponseForm","nameRef","useRef","pwdRef","messageRef","questionRef","question","setQuestion","door","Date","getDate","toString","Question","id","ref","alt","src","img1","width","img2","img3","img4","doorNo","keys","Object","randomId","Math","floor","random","length","q","method","body","JSON","stringify","headers","catch","err","form","onSubmit","event","preventDefault","submittedForm","current","value","password","answer","submittedAt","console","log","onSubmittedDoor","control","rows","placeholder","type","required","actions","ResponsePage","navigate","useNavigate","dbName","Error","submitDoorHandler","alert","message","ThankYouPage","visible","setVisible","qna","setQna","StringOrImg","onClick","PreviousDoorsPage","idList","setIdList","filteredData","filter","x","pop","ids","parseInt","key","reverse","AddUserFrom","user","submittedUser","forEach","onAddedUser","document","getElementById","innerHTML","AdminPage","userWithPassword","addUserWithPassword","to","loggedIn","setLoggedIn","rerenderHack","setRerenderHack","setDoor","userAnswers","setUserAnswers","users","setUsers","submitHandler","pwd","givePoints","maybeGive","tmpScore","setSetDoor","no","updateUsers","NotLoggedIn","LoggedIn","usernames","qkey","qid","AddDoorForm","qRef","aRef","submittedQnA","onAddedQnA","AddDoor","Hamburger","hamburger","hamburgerClass","setHamburgerClass","navmenu","navmenuClass","setNavmenuClass","open","setOpen","toggle","active","navbar","navbranding","navitem","bar","HackerPage","App","main","path","exact","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.f12ec48f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Hamburger_navbar__21JeB\",\"navbranding\":\"Hamburger_navbranding__2JFfS\",\"navmenu\":\"Hamburger_navmenu__2JUuE\",\"navlink\":\"Hamburger_navlink__1PrJC\",\"hamburger\":\"Hamburger_hamburger__36Un3\",\"bar\":\"Hamburger_bar__1W2Nz\",\"active\":\"Hamburger_active__2aKt6\",\"navitem\":\"Hamburger_navitem__2Zqz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ResponseForm_form__1VFJw\",\"control\":\"ResponseForm_control__jRjwf\",\"actions\":\"ResponseForm_actions__1-bhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__uN9ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3K4pi\"};","import classes from \"./Card.module.scss\";\n\nfunction Card(props) {\n  return <div className={classes.card}>{props.children}</div>;\n}\n\nexport default Card;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\n\nfunction Highscore() {\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          setUserData(data);\n        }\n      });\n  }, []);\n  var sortedUserList = [];\n  for (var username in userData) {\n    sortedUserList.push([username, userData[username]]);\n  }\n  sortedUserList.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  return (\n    <div>\n      <Card>\n        <h2>Highscore</h2>\n        {sortedUserList !== [] && (\n          <table>\n            <tbody>\n              {sortedUserList.map((username) => (\n                <tr key={username[0]}>\n                  <td>{username[0]}</td>\n                  <td>{username[1]}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </Card>\n    </div>\n  );\n}\n\nexport default Highscore;\n","export default __webpack_public_path__ + \"static/media/1desember.a89d8119.jpeg\";","export default __webpack_public_path__ + \"static/media/2desember.39d5a428.jpeg\";","export default __webpack_public_path__ + \"static/media/3desember.84ebc20f.jpeg\";","export default __webpack_public_path__ + \"static/media/4desember.a4f126d3.jpeg\";","import classes from \"./ResponseForm.module.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport img1 from \"../img/1desember.jpeg\";\nimport img2 from \"../img/2desember.jpeg\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\n\nimport Card from \"./Card\";\n\nfunction ResponseForm(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n  const messageRef = useRef();\n  const questionRef = useRef();\n\n  const [question, setQuestion] = useState(\"\");\n  const today = new Date();\n  const door = today.getDate().toString();\n\n  useEffect(() => {\n    openDoor(door);\n  }, [door]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedForm = {\n      username: nameRef.current.value,\n      password: pwdRef.current.value,\n      answer: messageRef.current.value,\n      question: questionRef.current.value,\n      door: door,\n      submittedAt: new Date(),\n    };\n    console.log(submittedForm);\n    props.onSubmittedDoor(submittedForm);\n  }\n\n  function openDoor(doorNo) {\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/openedDoors/${doorNo}/question.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data);\n          setQuestion(data[keys[0]].question);\n        } else {\n          fetch(\n            `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorIds.json`\n          )\n            .then((response) => {\n              return response?.json();\n            })\n            .then((data) => {\n              var keys = Object.keys(data);\n              var randomId = keys[Math.floor(Math.random() * keys.length)];\n              fetch(\n                `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorsQ/${randomId}.json`\n              )\n                .then((response) => {\n                  return response?.json();\n                })\n                .then((data) => {\n                  var keys = Object.keys(data);\n                  var q = data[keys[0]].question;\n                  setQuestion(q);\n                  fetch(\n                    `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/openedDoors/${doorNo}/question.json`,\n                    {\n                      method: \"POST\",\n                      body: JSON.stringify({ question: q, id: randomId }),\n                      headers: {\n                        \"Content-Type\": \"application/json\",\n                      },\n                    }\n                  );\n                })\n                .then(\n                  fetch(\n                    `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorIds/${randomId}.json`,\n                    {\n                      method: \"DELETE\",\n                    }\n                  )\n                )\n                .catch((err) => {\n                  setQuestion(err);\n                });\n            });\n        }\n      });\n  }\n\n  function Question(props) {\n    if (question === \"Rebus1\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus2\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus3\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (question === \"Rebus4\") {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return (\n        <div id=\"question\" ref={questionRef}>\n          {question}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h2>Dagens spørsmål</h2>\n        <Question />\n        <h3>Luke {door}</h3>\n        <div className={classes.control}>\n          <textarea\n            id=\"message\"\n            rows=\"5\"\n            ref={messageRef}\n            placeholder={`Skriv svaret her`}\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default ResponseForm;\n","import DoorWithResponse from \"../Components/ResponseForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ResponsePage() {\n  const navigate = useNavigate();\n  function checkPasswordAndSubmit(answer) {\n    const dbName = `${answer.password}${answer.username}`;\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/users/${dbName}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          submitDoorHandler(answer);\n        } else {\n          throw new Error(\"Brukernavn eller passord er feil\");\n        }\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  }\n\n  function submitDoorHandler(answer) {\n    const doorNo = answer.door;\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/openedDoors/${doorNo}/answer.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(answer),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => {\n      navigate(\"/takk\");\n    });\n  }\n  return (\n    <div>\n      <section>\n        <DoorWithResponse onSubmittedDoor={checkPasswordAndSubmit} />\n      </section>\n    </div>\n  );\n}\n\nexport default ResponsePage;\n","function ThankYouPage() {\n  return <div>Lukesvar er notert! Håper det var riktig &#129310;</div>;\n}\n\nexport default ThankYouPage;\n","import { useState, useEffect } from \"react\";\nimport Card from \"../Components/Card\";\nimport img1 from \"../img/1desember.jpeg\";\nimport img2 from \"../img/2desember.jpeg\";\nimport img3 from \"../img/3desember.jpeg\";\nimport img4 from \"../img/4desember.jpeg\";\n\nfunction Question({ id, door }) {\n  const [visible, setVisible] = useState(false);\n  const [qna, setQna] = useState({});\n\n  useEffect(() => {\n    console.log(id);\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorsQnA/${id}.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          var keys = Object.keys(data.qna);\n          setQna(data.qna[keys[0]]);\n        }\n      });\n  }, [id]);\n  function StringOrImg(props) {\n    if (qna.question === \"Rebus1\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 1\" src={img1} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus2\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 2\" src={img2} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus3\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 3\" src={img3} width=\"100%\"></img>\n        </div>\n      );\n    } else if (qna.question === \"Rebus4\") {\n      return (\n        <div id=\"question\">\n          <img alt=\"rebus 4\" src={img4} width=\"100%\"></img>\n        </div>\n      );\n    } else {\n      return <div id=\"question\">{qna.question}</div>;\n    }\n  }\n  return (\n    <Card key={id}>\n      <h2>Luke {door}</h2>\n      <StringOrImg />\n      {visible && <div>{qna.answer}</div>}\n      <button onClick={() => setVisible(!visible)}>\n        {visible ? \"Skjul svar\" : \"Vis svar\"}\n      </button>\n    </Card>\n  );\n}\n\nfunction PreviousDoorsPage() {\n  const [idList, setIdList] = useState([]);\n  useEffect(() => {\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/openedDoors.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          console.log(data);\n          var filteredData = data.filter((x) => x);\n          filteredData.pop();\n          var prevQuestionsObj = Object.keys(filteredData);\n          var qObj = prevQuestionsObj.map((x) => {\n            return {\n              question: filteredData[x].question,\n              door: parseInt(x) + 1,\n            };\n          });\n          var ids = qObj.map((x) => {\n            var key = Object.keys(x.question);\n            return { id: x.question[key[0]].id, door: x.door };\n          });\n          setIdList(ids.reverse());\n        }\n      });\n  }, []);\n  return idList.map((x) => <Question key={x.id} id={x.id} door={x.door} />);\n}\n\nexport default PreviousDoorsPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef } from \"react\";\n\nimport Card from \"./Card\";\n\nfunction AddUserFrom(props) {\n  const nameRef = useRef();\n  const pwdRef = useRef();\n\n  function addUser(user) {\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/users/username.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        if (data) {\n          Object.keys(data).forEach((key) => {\n            if (data[key]?.username === user.username) {\n              throw new Error(\"Brukernavnet er opptatt\");\n            }\n          });\n        }\n        return props.onAddedUser(user);\n      })\n      .catch(\n        (err) => (document.getElementById(\"error\").innerHTML = err.message)\n      );\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedUser = {\n      username: nameRef.current.value,\n      password: pwdRef.current.value,\n      submittedAt: new Date(),\n    };\n    try {\n      addUser(submittedUser);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Velg brukernavn og passord</h3>\n        <div className={classes.control}>\n          <input\n            type=\"text\"\n            id=\"name\"\n            required\n            ref={nameRef}\n            placeholder=\"Brukernavn\"\n          />\n        </div>\n        <div className={classes.control}>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={pwdRef}\n            placeholder=\"Passord\"\n          />\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddUserFrom;\n","import AddUserFrom from \"../Components/AddUserForm\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction AdminPage() {\n  const navigate = useNavigate();\n  function addUser(user) {\n    addUserWithPassword(user);\n    addUsername({ username: user.username, submittedAt: user.submittedAt });\n  }\n\n  function addUserWithPassword(userWithPassword) {\n    const dbName = `${userWithPassword.password}${userWithPassword.username}`;\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/users/${dbName}.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(userWithPassword),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n  function addUsername(username) {\n    fetch(\n      \"https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/users/username.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(username),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then(() => navigate(\"/takk\"));\n  }\n  return (\n    <div>\n      <section>\n        <AddUserFrom onAddedUser={addUser} />\n      </section>\n      <Link to=\"/admin\">.</Link>\n    </div>\n  );\n}\n\nexport default AdminPage;\n","import { useRef, useState, useEffect } from \"react\";\n\nfunction AdminPage() {\n  const username = useRef();\n  const password = useRef();\n  const doorNo = useRef();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [rerenderHack, setRerenderHack] = useState(false);\n  const [door, setDoor] = useState(\"\");\n  const [qna, setQna] = useState({});\n  const [userAnswers, setUserAnswers] = useState({});\n\n  const [users, setUsers] = useState({});\n\n  useEffect(() => {\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/score.json`\n    )\n      .then((response) => {\n        return response?.json();\n      })\n      .then((data) => {\n        setUsers(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (door !== \"\") {\n      fetch(\n        `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/openedDoors/${door}.json`\n      )\n        .then((response) => {\n          return response?.json();\n        })\n        .then((data) => {\n          setUserAnswers(data.answer);\n          const qkey = Object.keys(data.question);\n          const qid = data.question[qkey[0]].id;\n          fetch(\n            `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorsQnA/${qid}.json`\n          )\n            .then((response) => {\n              return response?.json();\n            })\n            .then((data) => {\n              if (data) {\n                var keys = Object.keys(data.qna);\n                setQna(data.qna[keys[0]]);\n              }\n            });\n        });\n    }\n  }, [door]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const user = username.current.value;\n    const pwd = password.current.value;\n    if (user === \"sjef\" && pwd === \"sjef1\") {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  }\n\n  function givePoints(username, maybeGive) {\n    var tmpScore = users[username];\n    if (maybeGive === \"+\") {\n      tmpScore++;\n    } else {\n      tmpScore--;\n    }\n\n    users[username] = tmpScore;\n    setUsers(users);\n    setRerenderHack(!rerenderHack);\n  }\n\n  function setSetDoor(event) {\n    event.preventDefault();\n\n    const no = doorNo.current.value;\n    setDoor(no);\n  }\n\n  function updateUsers(event) {\n    event.preventDefault();\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/score.json`,\n      {\n        method: \"PATCH\",\n        body: JSON.stringify(users),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  }\n\n  function NotLoggedIn() {\n    return (\n      <form onSubmit={submitHandler}>\n        <input type=\"text\" ref={username} />\n        <input type=\"password\" ref={password} />\n        <button>Prøv</button>\n      </form>\n    );\n  }\n\n  function LoggedIn() {\n    const usernames = Object.keys(users);\n    return (\n      <div>\n        <form onSubmit={setSetDoor}>\n          <input type=\"text\" ref={doorNo} />\n          <div>Spørsmål</div>\n          <pre id=\"questionP\">{JSON.stringify(qna, null, 2)}</pre>\n          <pre id=\"answers\">{JSON.stringify(userAnswers, null, 2)}</pre>\n          <button>butt</button>\n        </form>\n        <form onSubmit={updateUsers}>\n          <table>\n            <tbody>\n              {usernames.map((username) => (\n                <tr key={username}>\n                  <td>\n                    {username} {users[username]}{\" \"}\n                  </td>\n                  <td>\n                    <button onClick={() => givePoints(username, \"+\")}>\n                      +1\n                    </button>\n                    <button onClick={() => givePoints(username, \"-\")}>\n                      -1\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button>Oppdater</button>\n        </form>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {!loggedIn && <NotLoggedIn />}\n      {loggedIn && <LoggedIn />}\n    </div>\n  );\n}\n\nexport default AdminPage;\n","import classes from \"./ResponseForm.module.css\";\nimport { useRef } from \"react\";\n\nimport Card from \"./Card\";\n\nfunction AddDoorForm(props) {\n  const qRef = useRef();\n  const aRef = useRef();\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const submittedQnA = {\n      id: Math.floor(Math.random() * 1000),\n      question: qRef.current.value,\n      answer: aRef.current.value,\n      submittedAt: new Date(),\n    };\n    try {\n      props.onAddedQnA(submittedQnA);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Card>\n      <form className={classes.form} onSubmit={submitHandler}>\n        <h3>Legg inn en ny luke</h3>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"question\"\n            required\n            rows=\"5\"\n            ref={qRef}\n            placeholder=\"Spørsmål\"\n          />\n        </div>\n        <div className={classes.control}>\n          <textarea\n            type=\"text\"\n            id=\"answer\"\n            rows=\"5\"\n            required\n            ref={aRef}\n            placeholder=\"Svar\"\n          />\n        </div>\n        <div id=\"error\"> </div>\n        <div className={classes.actions}>\n          <button>Send inn</button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\nexport default AddDoorForm;\n","import AddDoorForm from \"../Components/AddDoorForm\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction AddDoor() {\n  const navigate = useNavigate();\n\n  function addDoor(door) {\n    fetch(\n      `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorsQnA/${door.id}/qna.json`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(door),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then(\n        fetch(\n          `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorsQ/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({ question: door.question }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(\n        fetch(\n          `https://adventofjokes-default-rtdb.europe-west1.firebasedatabase.app/doorIds/${door.id}.json`,\n          {\n            method: \"POST\",\n            body: JSON.stringify(door.id),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n      )\n      .then(navigate(\"/takk\"));\n  }\n\n  return (\n    <div>\n      <section>\n        <AddDoorForm onAddedQnA={addDoor} />\n      </section>\n    </div>\n  );\n}\n\nexport default AddDoor;\n","import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport classes from \"./Hamburger.module.scss\";\n\nfunction Hamburger() {\n  const [hamburgerClass, setHamburgerClass] = useState(classes.hamburger);\n  const [navmenuClass, setNavmenuClass] = useState(classes.navmenu);\n  const [open, setOpen] = useState(false);\n\n  function toggle() {\n    if (!open) {\n      setHamburgerClass(classes.hamburger + \" \" + classes.active);\n      setNavmenuClass(classes.navmenu + \" \" + classes.active);\n      setOpen(true);\n    } else {\n      setHamburgerClass(classes.hamburger);\n      setNavmenuClass(classes.navmenu);\n      setOpen(false);\n    }\n  }\n  return (\n    <header>\n      <nav className={classes.navbar}>\n        <Link className={classes.navbranding} to=\"/\">\n          Vitsekalender\n        </Link>\n        <ul className={navmenuClass}>\n          <li className={classes.navitem}>\n            <Link to={`/highscore`} onClick={() => toggle()}>\n              Highscore\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to={`/`} onClick={() => toggle()}>\n              Dagens luke\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/tidligere-luker\" onClick={() => toggle()}>\n              Tidligere luker\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/legg-til-luke\" onClick={() => toggle()}>\n              Nytt spørsmål\n            </Link>\n          </li>\n          <li className={classes.navitem}>\n            <Link to=\"/ny-bruker\" onClick={() => toggle()}>\n              Ny bruker\n            </Link>\n          </li>\n        </ul>\n        <div className={hamburgerClass} onClick={() => toggle()}>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n          <span className={classes.bar}></span>\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Hamburger;\n","function HackerPage() {\n  return <h3>Ikke prøv deg på å hacke kalenderen din dust.</h3>;\n}\n\nexport default HackerPage;\n","import { Route, Routes } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\nimport Highscore from \"./Pages/Highscore\";\nimport ResponsePage from \"./Pages/ResponsePage\";\nimport ThankYouPage from \"./Pages/ThankYouPage\";\nimport PreviousDoors from \"./Pages/PreviousDoorsPage\";\nimport NewUserPage from \"./Pages/AddUserPage\";\nimport AdminPage from \"./Pages/AdminPage\";\nimport AddDoor from \"./Pages/AddDoor\";\nimport Hamburger from \"./Components/Layout/Hamburger\";\nimport HackerPage from \"./Pages/Hackerfaen\";\n\nfunction App() {\n  return (\n    <div className={classes.main} id=\"main\">\n      <Hamburger />\n      <Routes>\n        <Route path=\"/\" exact element={<ResponsePage />} />\n        <Route path=\"/highscore\" exact element={<Highscore />} />\n        <Route path=\"/takk\" element={<ThankYouPage />} />\n        <Route path=\"/fuckdeg\" element={<HackerPage />} />\n        <Route path=\"/tidligere-luker\" element={<PreviousDoors />} />\n        <Route path=\"/ny-bruker\" element={<NewUserPage />} />\n        <Route path=\"/legg-til-luke\" element={<AddDoor />} />\n        <Route path=\"/admin\" element={<AdminPage />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nreportWebVitals();"],"sourceRoot":""}